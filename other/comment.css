/*
css中的注釋 ctrl + /

一、選擇器：

id選擇器 #app
類選擇器 .one
標簽選擇器 div
交集選擇器 div.side div中class是side的
并集選擇器 div,p


父子 直接包含關係 ul>li tab自動生成 ul>li*5 五個li
祖先與後代 直接或間接包含關係（父元素也算祖先)
兄弟 擁有相同父元素的元素為兄弟元素 ul+ul tab自動生成兩個ul

div的子元素p(直接包含) 父元素 > 子元素 div > p
後代p元素選擇器 祖先 空格 後代 div p
選擇下一個兄弟（緊挨著的那個p兄弟) 前一個 + 下一個 div + p
選擇下面所有的b兄弟元素 a ~ b


屬性選擇器
選擇含有指定屬性的元素 p[屬性名]
選擇含有指定屬性和屬性值得元素 p[屬性名=abc]
選擇屬性值以指定值開頭的元素 [屬性名^=屬性值]
選擇屬性值以指定值結尾的元素 [屬性名&=屬性值]
選擇屬性值含有某值的元素 [屬性名*=屬性值]


僞類選擇器 僞類描述元素的特殊狀態 第一個元素，被點擊的元素，鼠標移動的元素
一般情況以:開頭
將ul中的第一個li設置為紅色 ul>li:first-child 
:last-child 最後一個子元素
:nth-child()選中第n個子元素
:nth-child(n) 第n個 0~正無窮 選擇全部
:nth-child(2n) 選中偶數個子元素 even
:nth-child(2n+1) 選中奇書個子元素 odd

ul>li:first-child 選不到，li不在第一個 而oftype可以
ul
span 
li


:first-of-type
:last-of-type
:nth-of-type()
這幾個僞類選擇器在同類型元素中進行排序

:not()否定僞類 將符合條件的元素去除
ul>li:not(li:nth-child(3)) ul所有li子元素除了第三個

只適用於a
a:link 用來表示沒有訪問過的鏈接 正常連接可以設置任何屬性
a:visited 用來表示訪問過的鏈接 由於隱私原因所以這個僞類只能修改顔色

任何的元素都有
:hover 用來表示鼠標移入的狀態
:active 用來表示鼠標點擊狀態


僞元素選擇器 表示頁面中一些特殊的并不真實存在的元素（特殊位置)
p::first-letter 表示第一個字母
p::first-line 表示第一行
p::selection 表示選中内容
::befor 元素的最開始
::after 元素的最後
結合content屬性使用
div::before{
  content:"abc";
  color:red
}

<q></q>通過befor實現 加引號

*/

/* 
樣式繼承 我們為一個元素設置一個樣式同時也會應用到他的後代上面
繼承發生在祖先元素與後代元素中的
爲了方便開發，利用繼承我們可以寫一次通用樣式到祖先元素中
但是注意，不是所有的樣式會被繼承 背景相關的 佈局相關的
*/

/* 
選擇器的權重 樣式衝突 不同選擇器選中相同元素 設置相同屬性為不同值

内聯樣式      1,0,0,0
id選擇器      0,1,0,0
類和爲樂選擇器 0,0,1,0
元素選擇器     0,0,0,1
通配選擇器     0,0,0,0
繼承的樣式     沒有優先級

相加計算
分組選擇器單獨計算
選擇器纍加不會超過其最大的數量級，類選擇器再多也不會超過id選擇器

#box 100
div#box 1+100=101
.d1.d2.d3 

如果優先級計算后一樣，則優先使用靠下面那個

可以在某一個樣式的後面添加！important 則此時該樣式會獲得最高的優先級 甚至超過内聯樣式

*/


/* 
單位
長度單位
  像素
     屏幕顯示器實際上是一個個小點組成
     不同屏幕的像素大小不同，像素越小顯示越清晰
     所以同樣的200像素在不同設備下顯示效果不同，高清屏幕會變小
  百分比
     可以設置屬性相對於父元素屬性值的百分比 width="%50"
     設置百分比可以使子元素跟隨父元素的改變而改變
  em
     em相對與元素本省字體大小來計算的
     1em=1font-size
     em會跟隨字體大小改變而改變
  rem 
     rem相對於根元素html字體大小
    

*/

/* 
顔色單位
顔色名 red orange
rgb 0-255 rgb(red,green,blue) rgb(0,0,0) 可以給百分比
rgba(0,0,0,0) 最後一個值為透明度
十六進制的rgb #紅色綠色藍色 一共六位 兩位一個 
如果兩位重複可以簡寫 必須兩兩重複
#aabbcc #abc

 */

 /* 
HSL值 工業設計裏用的多
色相 環狀色帶 （0-360） hsl(0,100，100)
飽和度 顔色濃度 0%-100%
亮度 0%-100%

HSLA 
 */

 /* 
 layout
 
 01 文檔流 normal flow
 網頁是一個多層結構，一層樓一層
 通過css為每一層來設置樣式
 用戶只能看到最上面一層
 最底下一層成爲文檔流
     我們創建的元素默認都在文檔流中
 元素兩個狀態
     在文檔流
     不在文檔流

  在文檔流中的元素特點
      塊元素
         在頁面中獨占一行
         默認寬度是父元素的全部
         默認高度是被子元素内容撐開的高度
         自上而下排列
      行内元素
         行内元素不會獨占一行
         行内元素在頁面中自左向右水平排列
         如果一行中部能容納所有元素，則換到第二行繼續，自左向右
         寬高縂是被内容撐開

  盒模型 盒子模型 框模型
      css將頁面中所有元素都設置成矩形盒子
      佈局即擺放盒子
      每一個盒子都有以下幾個部分組成
          
          内容區（content)
          内邊距（padding)
          邊框（border）
          以上三個屬性決定大小

          外邊距(margin)決定位置

      内容區（content），元素的所有子元素和文本内容都在内容區中排列
      内容區大小由width和height兩個屬性設置

      邊框（border）
      邊框大小會影響盒子大小
      設置邊框 必須設置三個屬性 缺一不可
          邊框寬度:border-width bw 可以省略不寫，因爲有一個默認值 
              四個值 上 右 下 左
              三個值 上 左右 下
              兩個值 上下 左右
              一個值 上下左右都是一個值
              除了border-width有一組 border-XX-width xx:top right bottom left
          邊框顔色：border-color bc
              指定邊框顔色，也可以分別指定
              如果省略，使用color屬性 前景色
          邊框樣式:border-style solid
          solid 實綫
          dotted 點狀虛綫
          dashed 綫虛綫、
          double 雙綫
          可以分別指定四個邊框
          默認值為none 沒有邊框 必須指定

          簡寫 border: 10px solid red
               border-top/right/bottom/left

    

     width height 設置内容

     padding内邊距
        内容區和邊框之間的距離
        pading-top/right/bottom/left
        背景顔色會延申到内邊距上
        内邊距的設置會影響盒子的大小
        盒子可見框大小，由内容區 内邊距 和 邊框共同決定
     

    margin外邊距 
      不影響盒子大小 
      影響盒子位置
      margin-top  正值，元素往下移動
      margin-left 正值，元素往右走
      margin-bottom 正值，其下面的元素會向下移動 
      margin-right 默認情況下，設置值不會產生效果

      如果是負值，元素會朝相反的方向移動
      margin會影響到盒子實際占用空間大小

  元素在頁面中是按照自左向右的順序排列
      所以默認情況下如果我們設置的左和上外邊距，則會移動元素自身
      設置下和右會移動其他元素


          
  盒子的水平佈局
      元素在其父元素中水平方向的位置
          margin-left
          border-left
          padding-left
          width
          padding-right
          border-right
          margin-right

      一個元素在其父元素中，水平佈局必須滿足以下等式 必須滿足
      總和=其父元素内容區寬度
      margin-left+border-left+padding-left+width+padding-right+border-right+margin-right
      以上等式必須滿足，如果不滿足，稱爲過度約束，則會自動調整
          如果這七個值沒有auto的情況，瀏覽器會調整margin-right以使等式成立
          這七個值中有三個可設置auto
          width 默認值auto 其他默認值為0
          margin-left
          margin-right
          如果某個值為auto,則會自動調整為auto的那個值
          如果將一個寬度和一個外邊距設置為auto,則寬度會調整到最大
          如果三個值都設置auto,則其他都為0，width最大
          如果將兩個設置為auto,width為固定值,則會將外邊距設置為相同的值
              所以我們經常利用這個特點使子元素居中

              width=10000時，margin-right為負值


    垂直方向佈局
    如果父元素不設置高度的話，默認情況下，父元素高度被内容撐開
    如果設置高度的話，設置多少就是多少
    子元素是在父元素内容區排列
        如果子元素超過父元素，則子元素會從父元素中溢出
        使用overflow屬性設置如何溢出
            visible:默認溢出
            hidden:溢出内容會被裁剪，不顯示
            scroll:生成兩個滾動條，通過滾動條查看完整内容
            auto:根據需要生成滾動條 沒有水平滾動條
        overflow-x單獨處理
        overflow-y

   

      外邊距的摺叠
      margin-bottom與margin-top配合一起使用
      外邊距的重叠，
      相鄰的 垂直方向 外邊距會發生重叠現象
          兄弟元素  兩者都為正值，會取兩者之間的較大值
                   特殊情況
                   如果相鄰外邊距一正一負，則取和
                   如果相鄰外邊距都為負值，則取絕對值較大
              不需要處理
          父子元素
              父子元素的相鄰外編劇，子元素會傳遞給父元素
              改爲使用内邊距，不用外邊距，或不相鄰即可，父元素高度需要再減去pading
              加一個border也可以解決，高度減去borderwidth



    行内元素盒模型
        不支持設置内容區寬高
        padding，垂直方向不會影響元素佈局
        border 垂直方向不會影響佈局
        margin 垂直方向不會影響佈局，水平相加
    
    display用來設置元素顯示類型
      inline設置為行内元素
      block設置為塊級元素
      inline-block行内快元素 可以設置寬高，并且不獨占一行 中間有一個空襲
      table將元素設置為表格
      none元素不在頁面中顯示 
      
      visiblity設置元素設置狀態 
         visible 正常顯示
         hidden 元素在頁面中隱藏，位置保留
      

 */

 /* 
 默認樣式
     通常情況下，瀏覽器會為元素設置一些默認樣式
     通常情況下編寫會去掉默認樣式 PC端

     body{
      margin:0;
     }

     p{
      margin:0
     }

     ul{
      margin:0;
      padding:0;
      list-style:none;
     }

     *{
      margin:0;
      padding:0;
     }
     重置樣式表
       reste.css直接去除瀏覽器默認樣式
       normalize.css對默認樣式進行統一

     <link rel="stylesheet" href=".css">
 */


 /* 
 盒子大小
    box-sizing用來設置盒子尺寸計算方式
        content-box寬度高度設置内容大小
        border-box寬度高度用來設置整個盒子可見框大小 内容和内邊距和邊框的縂大小


輪廓 
   outline 用來設置元素的輪廓綫
      不同點：不會影響到可見框大小
      其他一樣

陰影
   box-shadow設置元素陰影效果，陰影效果不會影響佈局
   box-shadow: 10px 10px 20px red 
   第一個值 左側水平偏移量 正往右
   第二個值 垂直偏移量 正往下
   第三個值 模糊半徑
   第四個值 陰影顔色


圓角
   border-radius:用來設置圓角
   border-top-left-radius 設置園半徑 用半徑花園，然後找切點
   兩個半徑就是橢圓 可以設置兩個值
   四個值 左上 右上 右下
   三個值 左上 右上左下 右下
   兩個值 對角綫 左上右下 右上左下
   border-radius:50%;圓形

 */

 /* 
 浮動 橫向佈局 水平排列
 通過浮動，可以讓一個元素向其父元素的左側或者右側移動
     使用float屬性
        none 默認值
        left 向左浮動
        right 元素向右浮動
注意：元素設置浮動后，水平佈局等式不需要强制成立
      元素設置浮動后，會完全從文檔流中脫離，不在占用文檔流中的位置
浮動特點：
    1.浮動元素會完全脫離文檔流，不在占用文檔流中的位置
    2.設置浮動后，元素會向父元素的左側或右側移動
    3.浮動元素默認不會從父元素中移出
    4.浮動元素向左或向右移動時，不會超過它前邊的其他浮動元素
    5.如果浮動元素的上面是一個沒有浮動的快嚴肅，則浮動元素無法上移，像一堵墻
    6.浮動元素高度不會超過上面浮動元素的兄弟，最多和他一樣高
    7.浮動元素不會蓋住文字，文字會自動環繞到浮動元素周圍
    8.元素設置浮動后，將會從文檔流中脫離
       塊元素
           1.塊元素不會再獨占一行
           2.脫離之後，塊元素的寬度和高度默認被内容撐開
      行内元素 變爲快元素 和塊元素一樣 不需要區分快與行内與快樂

      line-height 文字垂直居中 内容自動撐開元素 不用設置高度
    

高度塌陷問題
    在浮動佈局中，父元素默認是被子元素撐開，浮動時，子元素完全脫離文檔流u，無法撐開父元素
    導致父元素高度丟失，下面的元素佈局會混亂
BFC(block f)
   Css中隱含屬性，開啓BFC后，該元素會變成一個獨立的佈局區域
   特點
      1.不會被浮動元素蓋住
      2.子元素與父元素外邊距不會重叠
      3.可以包含浮動的子元素
   可以通過一些特殊方式開啓BFC
       1.設置元素浮動 float:left
       2.將元素設置為行内塊元素 沒有寬度了
       3.overflow設置為非visible auto 或者 hidden


clear清除浮動元素對當前元素產生影響
   left 清除左側浮動元素對元素的影響 原理通過margin-top實現
   right 清除右側浮動元素對元素的影響
   both 清除兩側中最大影響的浮動
 */


 /* 

解決上外編劇重合的問題
  .box::before{
    content:""
  }

  display:table

高度塌陷最終方案
    .box::after{
      content:"";
      clear:both;
      dispaly:block;
    }

    同時解決外邊距重合和邊框塌陷問題
    .clearfix::before,
    .clearfix::after{
      content:'';
      display:table;
      clear:both;
    }
 */


 /* 
 定位（position)
     定位是一種更高級的佈局手段
     通過定位可以將元素擺放到任意位置
     position
       static:默認值，沒有開啓定位
       relative:開啓元素相對定位
       absolute:開啓絕對定位
       fixed:開啓固定定位
       sticky 粘性定位

    相對定位 relative 不影響其他元素
       1.元素開啓相對定位后，不設置偏移量，元素 不會發生任何變化
       偏移量
       top 上邊距離
       bottom 垂直方向由兩個來控制，通常情況下只會使用一個屬性 向上移動 下面與下面的距離
       left 左側 水平方向定位
       right
       2.相對定位是相對於元素在文檔流中的位置
       3.相對定位會提升元素的層級
       4.相對定位不會使元素脫離文檔流
       5.不會改變性質，快還是快，行内還是行内

    絕對定位 absolute
       1.開啓絕對定位，不設置偏移量，元素的位置 不會發生變化
       2.開啓絕對定位，元素會從文檔流中脫離
       3.絕對定位會改變元素性質，行内改成快，快的寬高被内容撐開
       4.絕對定位會使元素提升一個層級
       5.絕對定位是相對於其包含快進行定位
       6.離他最新的，開啓定位的，祖先元素
       7.如果所有的祖先元素都沒有開啓定位，則相對與根元素（初始包含快）



       包含快
          正常情況下，離當前元素最近的祖先塊元素

 */


 /* 
 固定定位 fixed 
     固定定位也是一種絕對定位
      唯一不同的是，固定定位永遠參考瀏覽器眎口進行定位
      固定定位元素不會隨滾動條移動


  粘滯定位 position:sticky 相對於body
      跟相對定位特點基本相同
      儅到達某個位置時，不會再移動
 */

 /* 
 絕對定位
 七 + left +righ=水平内容寬度
 儅發生過度約束時(等式不滿足時)，沒有auto 自動調整 right
 可以設置為auto的屬性 margin-left width left right 
 left right默認是auto


 垂直方向佈局等式必須滿足

 top + margin-top/bottom + padding-top/bottom + border-top/bottom + height =内容高度

 垂直居中


 */


/* 
元素的層級
    對於開啓定位的元素z-index屬性指定元素層級
    值越大，越靠上面
    如果層級一樣，優先顯示靠下面的
    祖先元素層級再高也不會蓋住後代元素

 */

 /* 
 字體
 color用來設置字體顔色
 font-size字體大小
    em 當前字體大小
    rem 當前根字體大小
 font-family 字體格式 微軟雅黑等
 字體分類
 serif襯綫字體 我想用一個襯綫字體，瀏覽器自動使用該類別下的字體
 sans-serif非襯綫字體
 monospace等寬字體
 font-family:'a b',c,d

 font-face可以將服務器中的字體直接提供給用戶

 @font-face{
  font-family:'myFont';指定字體名稱(自定義，使用時用的名字)
  src:url(./XXX.ttf);
 }

字體都是矢量圖

圖標字體 IconFont
    網頁中的一些圖標，圖片大，不靈活，所以可以設置為字體

    fontaswsom
    1.下載
    2.解壓
    3.css webfont移動到項目
    4.引入all.css
    5.使用圖吧字體
         通過類名使用字體
         <i class="fas XXX"></i> fab與fas
         字體的另一種使用方式
         通過為元素設置圖標字體
         li::before{
          content="\abc"
          font-family
         } 
         
    
行高
line-height指文字在頁面占用的實際高度
如果是整數，是字體的證書被

字體框 font-size 
    字體存在的框子，設置font-size實際上就是在設置字體框額高度
    行高會在字體框的上下平均分配
    單行文字在元素中垂直居中，行高設置為元素高度
    行高經常用來設置行間距
    行間距=行高-字體大小

    

字體簡寫 字體和族必須寫
    font:字體大小/行高 字體族 

    行高可以省略不屑，使用默認值，不寫不代表不指定
    



 */

 /* 
 背景

 */

 /* 
 物理像素
 css像素 
 默認1：1
 眎口 默認1920 眎口寬度

 默認手機眎口980
 像素比 980/移動端寬度
 每一款設備都有一個最佳像素比 完美眎口 
 device-width 設備完美眎口
 移動端開發不能使用像素 要使用百分比
 百分比參考對象會發生變化 最好不用

 一個100vw眎口寬度
 1vw 1%眎口寬度
 相對與眎口寬度

 設計圖一般寬高
 750*1125
 */
 /* 
 vw適配方案
京東
 設置根元素的font-size 0.1vw
 其他地方使用1rem

 網頁中字體大小最小為12px
 如果設置了小於12px的值，瀏覽器自動改爲12

 擴大10倍
 */

 /* 
 
 */